# Check if a requested version of YARP is compatible with this version.
# As specified in:
#   http://www.cmake.org/cmake/help/cmake2.6docs.html#command:find_package

SET(_YARP_VERSION_MAJOR "@YARP_VERSION_MAJOR@")
SET(_YARP_VERSION_MINOR "@YARP_VERSION_MINOR@")
SET(_YARP_VERSION_PATCH "@YARP_VERSION_PATCH@")
SET(_YARP_VERSION_MODIFIER "@YARP_VERSION_MODIFIER@")
SET(_YARP_VERSION_ABI "@YARP_VERSION_ABI@")
SET(_YARP_VERSION_API "${_YARP_VERSION_MAJOR}.${_YARP_VERSION_MINOR}")
SET(PACKAGE_VERSION "${_YARP_VERSION_MAJOR}.${_YARP_VERSION_MINOR}.${_YARP_VERSION_PATCH}${_YARP_VERSION_MODIFIER}")

IF (PACKAGE_FIND_VERSION_COUNT EQUAL 0)
  SET (PACKAGE_VERSION_COMPATIBLE TRUE)
  SET (PACKAGE_VERSION_EXACT TRUE)
ENDIF ()

IF (PACKAGE_FIND_VERSION_COUNT EQUAL 1)
  IF (PACKAGE_FIND_VERSION_MAJOR EQUAL _YARP_VERSION_MAJOR)
    SET (PACKAGE_VERSION_COMPATIBLE TRUE)
    SET (PACKAGE_VERSION_EXACT TRUE)
  ENDIF ()
ENDIF ()

IF (PACKAGE_FIND_VERSION_COUNT EQUAL 2)
  IF (PACKAGE_FIND_VERSION_MAJOR EQUAL _YARP_VERSION_MAJOR)
    IF (PACKAGE_FIND_VERSION_MINOR EQUAL _YARP_VERSION_MINOR)
      SET (PACKAGE_VERSION_COMPATIBLE TRUE)
      SET (PACKAGE_VERSION_EXACT TRUE)
    ENDIF ()
  ENDIF ()
ENDIF ()

IF (PACKAGE_FIND_VERSION_COUNT GREATER 2)
  IF (PACKAGE_FIND_VERSION_MAJOR EQUAL _YARP_VERSION_MAJOR)
    IF (PACKAGE_FIND_VERSION_MINOR EQUAL _YARP_VERSION_MINOR)
      IF (PACKAGE_VERSION VERSION_EQUAL PACKAGE_FIND_VERSION)
	SET (PACKAGE_VERSION_EXACT TRUE)
	SET (PACKAGE_VERSION_COMPATIBLE TRUE)
      ENDIF ()
      IF (PACKAGE_FIND_VERSION_PATCH LESS _YARP_VERSION_PATCH)
	SET (PACKAGE_VERSION_COMPATIBLE TRUE)
      ENDIF ()
    ENDIF ()
  ENDIF ()
ENDIF ()

IF (NOT PACKAGE_VERSION_EXACT)
  SET (PACKAGE_VERSION_EXACT FALSE)
ENDIF ()

IF (NOT PACKAGE_VERSION_COMPATIBLE)
  SET (PACKAGE_VERSION_COMPATIBLE FALSE)
ENDIF ()

SET (PACKAGE_VERSION_UNSUITABLE FALSE)
