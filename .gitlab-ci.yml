image: registry.gitlab.com/drdanz/yarp/yarp-builder-debian-testing:latest

variables:
  CC: "cc"
  CXX: "c++"
  YARP_CMAKE_GENERATOR: "Unix Makefiles"
  YARP_CMAKE_BUILD_TYPE: "Release"
  YARP_SOURCE_DIR: "$CI_PROJECT_DIR"
  YARP_BINARY_DIR: "$CI_PROJECT_DIR/build"
  YARP_INSTALL_PREFIX: "$CI_PROJECT_DIR/install"
  YARP_INSTALL_DIR: "$CI_PROJECT_DIR/install/lib/cmake/YARP"
  CCACHE_BASEDIR: "$CI_PROJECT_DIR"
  CCACHE_DIR: "$CI_PROJECT_DIR/ccache"
  CCACHE_CPP2: "yes"
  PATH: "/usr/lib/ccache/:/usr/sbin:/usr/bin:/sbin:/bin"

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
  paths:
    - ccache/

before_script:
  - .ci/system_info.sh

stages:
  - configure
  - build
  - test
  - dox

################################################################################
# Job templates

.configure_template: &configure_definition
  stage: configure
  script:
    - .ci/configure.sh
  after_script:
    # Print cmake cache
    - echo "--------------------     BEGIN CMAKE CACHE    --------------------"
    - (cd ${YARP_BINARY_DIR}; cat CMakeCache.txt)
    - echo "--------------------      END CMAKE CACHE     --------------------"
  artifacts:
    paths:
      - build/
    expire_in: 3 hrs

.build_template: &build_definition
  stage: build
  script:
    - (cd ${YARP_BINARY_DIR}; cmake --build . --config ${YARP_CMAKE_BUILD_TYPE})
    - (cd ${YARP_BINARY_DIR}; cmake --build . --config ${YARP_CMAKE_BUILD_TYPE} --target install)
  artifacts:
    paths:
      - build/
    expire_in: 3 hrs

.test_template: &test_definition
  stage: test
  script:
    - (cd ${YARP_BINARY_DIR}; ctest --output-on-failure --build . -C ${YARP_CMAKE_BUILD_TYPE})
  retry: 2

.test_valgrind_template: &test_valgrind_definition
  stage: test
  script:
    - (cd ${YARP_BINARY_DIR}; cmake . -DYARP_VALGRIND_TESTS=ON -DYARP_VALGRIND_DRD_TESTS=OFF -DYARP_VALGRIND_HELGRIND_TESTS=OFF YARP_VALGRIND_MEMCHECK_TESTS=ON YARP_VALGRIND_SGCHECK_TESTS=OFF)
    # For now, disable tests with race conditions
    - (cd ${YARP_BINARY_DIR}; cmake . -DYARP_DISABLE_FAILING_TESTS=ON)
    - (cd ${YARP_BINARY_DIR}; ctest --output-on-failure --build . -C ${YARP_CMAKE_BUILD_TYPE})
  retry: 2

.bindings_lua_template: &bindings_lua_definition
  stage: test
  script:
    - .ci/test_bindings.sh lua

.bindings_tcl_template: &bindings_tcl_definition
  stage: test
  script:
    - .ci/test_bindings.sh tcl

.bindings_java_template: &bindings_java_definition
  stage: test
  script:
    - .ci/test_bindings.sh java


.bindings_tcl_template: &bindings_csharp_definition
  stage: test
  script:
    - .ci/test_bindings.sh csharp

.bindings_python_template: &bindings_python_definition
  stage: test
  script:
    - apt-get install -y -qq libpython3-dev
    - .ci/test_bindings.sh python

.bindings_ruby_template: &bindings_ruby_definition
  stage: test
  script:
    - .ci/test_bindings.sh ruby

.bindings_octave_template: &bindings_octave_definition
  stage: test
  script:
    - .ci/test_bindings.sh octave

.dox_template: &dox_definition
  stage: dox
  script:
    - (cd ${YARP_BINARY_DIR}; cmake --build . --config ${YARP_CMAKE_BUILD_TYPE} --target dox)

.examples_template: &examples_definition
  stage: test
  script:
    - .ci/examples.sh

.configure_and_build_template: &configure_and_build_definition
  stage: build
  dependencies: []
  script:
    - .ci/configure.sh
    - (cd ${YARP_BINARY_DIR}; cmake --build . --config ${YARP_CMAKE_BUILD_TYPE})
    - (cd ${YARP_BINARY_DIR}; cmake --build . --config ${YARP_CMAKE_BUILD_TYPE} --target install)
    - (cd ${YARP_BINARY_DIR}; ctest --output-on-failure --build . -C ${YARP_CMAKE_BUILD_TYPE})

################################################################################
# Test configuration with all available CMake

.configure-cmake-3_0:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.0/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_1:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.1/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_2:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.2/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_3:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.3/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_4:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.4/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_5:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.5/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_6:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.6/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_7:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.7/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_8:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.8/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_9:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.9/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_10:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.10/bin/cmake
    - .ci/system_info.sh

.configure-cmake-3_11:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.11/bin/cmake
    - .ci/system_info.sh

################################################################################
# Test build with all available compilers

.build-gcc-6:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set gcc /usr/bin/gcc-6
    - .ci/system_info.sh

.build-gcc-7:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set gcc /usr/bin/gcc-7
    - .ci/system_info.sh

.build-gcc-8:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set gcc /usr/bin/gcc-8
    - .ci/system_info.sh

.build-clang-4_0:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set cc /usr/bin/clang
    - update-alternatives --set c++ /usr/bin/clang++
    - update-alternatives --set clang /usr/lib/llvm-4.0/bin/clang
    - .ci/system_info.sh

.build-clang-5_0:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set cc /usr/bin/clang
    - update-alternatives --set c++ /usr/bin/clang++
    - update-alternatives --set clang /usr/lib/llvm-5.0/bin/clang
    - .ci/system_info.sh

.build-clang-6_0:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set cc /usr/bin/clang
    - update-alternatives --set c++ /usr/bin/clang++
    - update-alternatives --set clang /usr/lib/llvm-6.0/bin/clang
    - .ci/system_info.sh

################################################################################
# Builds with special parameters

build-skip-ace:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DSKIP_ACE=ON -DYARP_TEST_HEAP=ON"

build-no-math:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DCREATE_LIB_MATH:BOOL=OFF -DENABLE_yarpmod_fakeIMU:BOOL=OFF -DENABLE_yarpmod_fakeLaser:BOOL=OFF"

build-no-deprecated:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DYARP_NO_DEPRECATED=ON"

build-static:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DCREATE_SHARED_LIBRARY=OFF -DENABLE_yarpcar_h264:BOOL=OFF"

build-clean-api:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DYARP_CLEAN_API=ON -DYARP_COMPILE_TESTS=OFF"

################################################################################
# debian testing

.debian_testing_template: &debian_testing_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-debian-testing:latest
  cache:
    key: "debian-testing-$CI_COMMIT_REF_NAME"

configure-debian-testing:
  <<: *debian_testing_definition
  <<: *configure_definition

build-debian-testing:
  <<: *debian_testing_definition
  <<: *build_definition
  dependencies:
    - configure-debian-testing

.test-debian-testing:
  <<: *debian_testing_definition
  <<: *test_definition
  dependencies:
    - build-debian-testing

test-valgrind-debian-testing:
  <<: *debian_testing_definition
  <<: *test_valgrind_definition
  dependencies:
    - build-debian-testing

bindings-lua-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_lua_definition
  dependencies:
    - build-debian-testing

bindings-tcl-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_tcl_definition
  dependencies:
    - build-debian-testing

bindings-java-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_java_definition
  dependencies:
    - build-debian-testing

bindings-csharp-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_csharp_definition
  dependencies:
    - build-debian-testing

bindings-python-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_python_definition
  dependencies:
    - build-debian-testing

bindings-ruby-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_ruby_definition
  dependencies:
    - build-debian-testing

bindings-octave-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_octave_definition
  dependencies:
    - build-debian-testing

.dox-debian-testing:
  <<: *debian_testing_definition
  <<: *dox_definition
  dependencies:
    - build-debian-testing

################################################################################
# debian stretch

.debian_stretch_template: &debian_stretch_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-debian-stretch:latest
  cache:
    key: "debian-stretch-$CI_COMMIT_REF_NAME"

.configure-debian-stretch:
  <<: *debian_stretch_definition
  <<: *configure_definition

.build-debian-stretch:
  <<: *debian_stretch_definition
  <<: *build_definition
  dependencies:
    - configure-debian-stretch

.test-debian-stretch:
  <<: *debian_stretch_definition
  <<: *test_definition
  dependencies:
    - build-debian-stretch

#################################################################################
## ubuntu bionic

.ubuntu_bionic_template: &ubuntu_bionic_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-ubuntu-bionic:latest
  cache:
    key: "ubuntu-bionic-$CI_COMMIT_REF_NAME"

.configure-ubuntu-bionic:
  <<: *ubuntu_bionic_definition
  <<: *configure_definition

.build-ubuntu-bionic:
  <<: *ubuntu_bionic_definition
  <<: *build_definition
  dependencies:
    - configure-ubuntu-bionic

.test-ubuntu-bionic:
  <<: *ubuntu_bionic_definition
  <<: *test_definition
  dependencies:
    - build-ubuntu-bionic

#################################################################################
## ubuntu artful

.ubuntu_artful_template: &ubuntu_artful_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-ubuntu-artful:latest
  cache:
    key: "ubuntu-artful-$CI_COMMIT_REF_NAME"

.configure-ubuntu-artful:
  <<: *ubuntu_artful_definition
  <<: *configure_definition

.build-ubuntu-artful:
  <<: *ubuntu_artful_definition
  <<: *build_definition
  dependencies:
    - configure-ubuntu-artful

.test-ubuntu-artful:
  <<: *ubuntu_artful_definition
  <<: *test_definition
  dependencies:
    - build-ubuntu-artful

#################################################################################
## ubuntu xenial

.ubuntu_xenial_template: &ubuntu_xenial_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-ubuntu-xenial:latest
  cache:
    key: "ubuntu-xenial-$CI_COMMIT_REF_NAME"

.configure-ubuntu-xenial:
  <<: *ubuntu_xenial_definition
  <<: *configure_definition

.build-ubuntu-xenial:
  <<: *ubuntu_xenial_definition
  <<: *build_definition
  dependencies:
    - configure-ubuntu-xenial

.test-ubuntu-xenial:
  <<: *ubuntu_xenial_definition
  <<: *test_definition
  dependencies:
    - build-ubuntu-xenial
