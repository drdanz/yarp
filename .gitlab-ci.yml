image: registry.gitlab.com/drdanz/yarp/yarp-builder-debian-testing:latest

# FIXME: Use CMAKE_C_COMPILER_LAUNCHER and CMAKE_CXX_COMPILER_LAUNCHER instead
#        of changing the path as soon as CMake > 3.4 is required.

variables:
  PATH: "/usr/lib/ccache:/usr/sbin:/usr/bin:/sbin:/bin"
  CC: "cc"
  CXX: "c++"
  CCACHE_BASEDIR: "$CI_PROJECT_DIR"
  CCACHE_DIR: "$CI_PROJECT_DIR/ccache"
  CCACHE_CPP2: "yes"
  CTEST_OUTPUT_ON_FAILURE: "1"
  CTEST_PARALLEL_LEVEL: "1"
  YARP_CMAKE_GENERATOR: "Unix Makefiles"
  YARP_CMAKE_BUILD_TYPE: "Release"
  YARP_SOURCE_DIR: "$CI_PROJECT_DIR"
  YARP_BINARY_DIR: "$CI_PROJECT_DIR/build"
  YARP_INSTALL_PREFIX: "$CI_PROJECT_DIR/install"
  YARP_INSTALL_DIR: "$YARP_INSTALL_PREFIX/lib/cmake/YARP"
  YARP_VERBOSE: "1"
  YARP_PORT_RANGE: "20000"

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - ${CCACHE_DIR}/

before_script:
  - ${YARP_SOURCE_DIR}/.ci/system_info.sh

stages:
  - configure
  - build
  - test
  - dox

# FIXME
#except:
  #- /^.*appveyor.*$/
  #- /^.*travis.*$/


################################################################################
# Job templates

.configure_template: &configure_definition
  stage: configure
  script:
    - ${YARP_SOURCE_DIR}/.ci/configure.sh
  artifacts:
    paths:
      - ${CCACHE_DIR}/
      - ${YARP_BINARY_DIR}/
    expire_in: 4 hrs

.build_template: &build_definition
  stage: build
  script:
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE}
  after_script:
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE} --target install
  artifacts:
    paths:
      - ${CCACHE_DIR}/
      - ${YARP_BINARY_DIR}/
      - ${YARP_INSTALL_DIR}/
    expire_in: 4 hrs

.test_template: &test_definition
  stage: test
  script:
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE} --target test
  #retry: 2

.test_valgrind_template: &test_valgrind_definition
  stage: test
  script:
    - ${YARP_SOURCE_DIR}/.ci/enable_valgrind.sh
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE} --target test
  #retry: 2

.bindings_template: &bindings_definition
  stage: test
  script:
    - ${YARP_SOURCE_DIR}/.ci/test_bindings.sh ${YARP_BINDINGS_LANGUAGE}

.dox_template: &dox_definition
  stage: dox
  script:
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE} --target dox
  artifacts:
    paths:
      - ${YARP_BINARY_DIR}/dox/html/
      - ${YARP_BINARY_DIR}/dox/man/
      - ${YARP_BINARY_DIR}/dox/xml/
      - ${YARP_BINARY_DIR}/dox/YARP.tag
    expire_in: 4 hrs

examples_template: &examples_definition
  stage: test
  script:
    - ${YARP_SOURCE_DIR}/.ci/examples.sh

configure_and_build_template: &configure_and_build_definition
  stage: build
  dependencies: []
  script:
    - ${YARP_SOURCE_DIR}/.ci/configure.sh
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE}
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE} --target test
  after_script:
    - cmake --build ${YARP_BINARY_DIR} --config ${YARP_CMAKE_BUILD_TYPE} --target install


################################################################################
# Test configuration with all available CMake

configure-cmake-3_0:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.0/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_1:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.1/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_2:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.2/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_3:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.3/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_4:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.4/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_5:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.5/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_6:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.6/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_7:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.7/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_8:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.8/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_9:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.9/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_10:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.10/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

configure-cmake-3_11:
  <<: *configure_definition
  before_script:
    - update-alternatives --set cmake /opt/cmake-3.11/bin/cmake
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

################################################################################
# Test build with all available compilers

build-gcc-6:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set gcc /usr/bin/gcc-6
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

build-gcc-7:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set gcc /usr/bin/gcc-7
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

build-gcc-8:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set gcc /usr/bin/gcc-8
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

build-clang-4_0:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set cc /usr/bin/clang
    - update-alternatives --set c++ /usr/bin/clang++
    - update-alternatives --set clang /usr/lib/llvm-4.0/bin/clang
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

build-clang-5_0:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set cc /usr/bin/clang
    - update-alternatives --set c++ /usr/bin/clang++
    - update-alternatives --set clang /usr/lib/llvm-5.0/bin/clang
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

build-clang-6_0:
  <<: *configure_and_build_definition
  before_script:
    - update-alternatives --set cc /usr/bin/clang
    - update-alternatives --set c++ /usr/bin/clang++
    - update-alternatives --set clang /usr/lib/llvm-6.0/bin/clang
    - ${YARP_SOURCE_DIR}/.ci/system_info.sh

################################################################################
# Builds with special parameters

build-skip-ace:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DSKIP_ACE=ON -DYARP_TEST_HEAP=ON"
  artifacts:
    paths:
      - ${CCACHE_DIR}/
      - ${YARP_BINARY_DIR}/
      - ${YARP_INSTALL_DIR}/

test-valgrind-skip-ace:
  <<: *test_valgrind_definition
  dependencies:
    - build-skip-ace

build-no-math:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DCREATE_LIB_MATH:BOOL=OFF -DENABLE_yarpmod_fakeIMU:BOOL=OFF -DENABLE_yarpmod_fakeLaser:BOOL=OFF"

build-no-deprecated:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DYARP_NO_DEPRECATED=ON"

build-static:
  <<: *configure_and_build_definition
  variables:
    YARP_EXTRA_CMAKE_OPTIONS: "-DCREATE_SHARED_LIBRARY=OFF -DENABLE_yarpcar_h264:BOOL=OFF"

# FIXME use the new flag
#build-clean-api:
  #<<: *configure_and_build_definition
  #variables:
    #YARP_EXTRA_CMAKE_OPTIONS: "-DYARP_CLEAN_API=ON -DYARP_COMPILE_TESTS=OFF"

################################################################################
# debian testing

.debian_testing_template: &debian_testing_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-debian-testing:latest
  cache:
    key: "debian-testing-$CI_COMMIT_REF_SLUG"
    paths:
      - ${CCACHE_DIR}/

configure-debian-testing:
  <<: *debian_testing_definition
  <<: *configure_definition

build-debian-testing:
  <<: *debian_testing_definition
  <<: *build_definition
  dependencies:
    - configure-debian-testing

test-debian-testing:
  <<: *debian_testing_definition
  <<: *test_definition
  dependencies:
    - build-debian-testing

test-valgrind-debian-testing:
  <<: *debian_testing_definition
  <<: *test_valgrind_definition
  dependencies:
    - build-debian-testing

bindings-lua-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "lua"
  dependencies:
    - build-debian-testing

bindings-tcl-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "tcl"
  dependencies:
    - build-debian-testing

bindings-java-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "java"
  dependencies:
    - build-debian-testing

bindings-csharp-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "csharp"
  dependencies:
    - build-debian-testing

bindings-python2-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "python2"
  dependencies:
    - build-debian-testing

bindings-python3-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "python3"
  dependencies:
    - build-debian-testing

bindings-ruby-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "ruby"
  dependencies:
    - build-debian-testing

bindings-octave-debian-testing:
  <<: *debian_testing_definition
  <<: *bindings_definition
  variables:
    YARP_BINDINGS_LANGUAGE: "octave"
  dependencies:
    - build-debian-testing

dox-debian-testing:
  <<: *debian_testing_definition
  <<: *dox_definition
  dependencies:
    - build-debian-testing

################################################################################
# debian stretch

.debian_stretch_template: &debian_stretch_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-debian-stretch:latest
  cache:
    key: "debian-stretch-$CI_COMMIT_REF_SLUG"
    paths:
      - ${CCACHE_DIR}/

configure-debian-stretch:
  <<: *debian_stretch_definition
  <<: *configure_definition

build-debian-stretch:
  <<: *debian_stretch_definition
  <<: *build_definition
  dependencies:
    - configure-debian-stretch

test-debian-stretch:
  <<: *debian_stretch_definition
  <<: *test_definition
  dependencies:
    - build-debian-stretch

#################################################################################
## ubuntu bionic

.ubuntu_bionic_template: &ubuntu_bionic_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-ubuntu-bionic:latest
  cache:
    key: "ubuntu-bionic-$CI_COMMIT_REF_SLUG"
    paths:
      - ${CCACHE_DIR}/

configure-ubuntu-bionic:
  <<: *ubuntu_bionic_definition
  <<: *configure_definition

build-ubuntu-bionic:
  <<: *ubuntu_bionic_definition
  <<: *build_definition
  dependencies:
    - configure-ubuntu-bionic

test-ubuntu-bionic:
  <<: *ubuntu_bionic_definition
  <<: *test_definition
  dependencies:
    - build-ubuntu-bionic

#################################################################################
## ubuntu artful

.ubuntu_artful_template: &ubuntu_artful_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-ubuntu-artful:latest
  cache:
    key: "ubuntu-artful-$CI_COMMIT_REF_SLUG"
    paths:
      - ${CCACHE_DIR}/

configure-ubuntu-artful:
  <<: *ubuntu_artful_definition
  <<: *configure_definition

build-ubuntu-artful:
  <<: *ubuntu_artful_definition
  <<: *build_definition
  dependencies:
    - configure-ubuntu-artful

test-ubuntu-artful:
  <<: *ubuntu_artful_definition
  <<: *test_definition
  dependencies:
    - build-ubuntu-artful

#################################################################################
## ubuntu xenial

.ubuntu_xenial_template: &ubuntu_xenial_definition
  image: registry.gitlab.com/drdanz/yarp/yarp-builder-ubuntu-xenial:latest
  cache:
    key: "ubuntu-xenial-$CI_COMMIT_REF_SLUG"
    paths:
      - ${CCACHE_DIR}/

configure-ubuntu-xenial:
  <<: *ubuntu_xenial_definition
  <<: *configure_definition

build-ubuntu-xenial:
  <<: *ubuntu_xenial_definition
  <<: *build_definition
  dependencies:
    - configure-ubuntu-xenial

test-ubuntu-xenial:
  <<: *ubuntu_xenial_definition
  <<: *test_definition
  dependencies:
    - build-ubuntu-xenial
