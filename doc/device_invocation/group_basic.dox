/**
 * \ingroup dev_examples
 *
 * \defgroup group_basic Example for group (group_basic)

Instantiates \ref cmd_device_group "group" device implemented by yarp::dev::DeviceGroup.
\verbatim
# Make a motor and camera device.
# Put the motor device on the network.

device group

[part mymotor]
device test_motor
axes 10

[part mycam]
device test_grabber

[part broadcast]
device controlboard
subdevice mymotor
allow-deprecated-devices 1
\endverbatim
If this text is saved in a file called group_basic.ini then the device can be created by doing:
\verbatim
yarpdev --file group_basic.ini
\endverbatim
Of course, the configuration could be passed just as command line options, or as a yarp::os::Property object in a program:
\code
Property p;
p.fromConfigFile("group_basic.ini");
// of course you could construct the Property object on-the-fly
PolyDriver dev;
dev.open(p);
if (dev.isValid()) { /* use the device via view method */ }
\endcode
Here is a list of properties checked when starting up a device based on this configuration file.  Note that which properties are checked can depend on whether other properties are present.  In some cases properties can also vary between operating systems.  So this is just an example

<table>
<tr><td>PROPERTY</td><td>DESCRIPTION</td><td>DEFAULT</td></tr>
<tr><td>device</td><td></td><td></td></tr>
<tr><td>part</td><td>a list of section names, with each section containing a device</td><td></td></tr>
<tr><td>mymotor</td><td></td><td></td></tr>
<tr><td>mymotor.device</td><td></td><td></td></tr>
<tr><td>mymotor.wrapped</td><td></td><td></td></tr>
<tr><td>mymotor.axes</td><td>number of axes to pretend to have</td><td>4</td></tr>
<tr><td>mymotor.delay</td><td>delay in each call for debugging purpose, in ms</td><td>0</td></tr>
<tr><td>mycam</td><td></td><td></td></tr>
<tr><td>mycam.device</td><td></td><td></td></tr>
<tr><td>mycam.wrapped</td><td></td><td></td></tr>
<tr><td>mycam.width</td><td>desired width of test image</td><td>320</td></tr>
<tr><td>mycam.height</td><td>desired height of test image</td><td>240</td></tr>
<tr><td>mycam.horizontalFov</td><td>desired horizontal fov of test image</td><td>1.0</td></tr>
<tr><td>mycam.verticalFov</td><td>desired vertical fov of test image</td><td>2.0</td></tr>
<tr><td>mycam.mirror</td><td>mirroring disabled by default</td><td>0</td></tr>
<tr><td>mycam.focalLengthX</td><td></td><td>4.0</td></tr>
<tr><td>mycam.focalLengthY</td><td></td><td>5.0</td></tr>
<tr><td>mycam.principalPointX</td><td></td><td>6.0</td></tr>
<tr><td>mycam.principalPointY</td><td></td><td>7.0</td></tr>
<tr><td>mycam.retificationMatrix</td><td></td><td>1.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0</td></tr>
<tr><td>mycam.distortionModel</td><td></td><td>FishEye</td></tr>
<tr><td>mycam.k1</td><td></td><td>8.0</td></tr>
<tr><td>mycam.k2</td><td></td><td>9.0</td></tr>
<tr><td>mycam.k3</td><td></td><td>10.0</td></tr>
<tr><td>mycam.t1</td><td></td><td>11.0</td></tr>
<tr><td>mycam.t2</td><td></td><td>12.0</td></tr>
<tr><td>mycam.freq</td><td>rate of test images in Hz</td><td></td></tr>
<tr><td>mycam.period</td><td>period of test images in seconds</td><td></td></tr>
<tr><td>mycam.mode</td><td>bouncy [ball], scrolly [line], grid [grid], grid multisize [size], random [rand], none [none]</td><td>line</td></tr>
<tr><td>mycam.src</td><td></td><td></td></tr>
<tr><td>mycam.bayer</td><td>should emit bayer test image?</td><td></td></tr>
<tr><td>mycam.mono</td><td>should emit a monochrome image?</td><td></td></tr>
<tr><td>broadcast</td><td></td><td></td></tr>
<tr><td>broadcast.device</td><td></td><td></td></tr>
<tr><td>broadcast.wrapped</td><td></td><td></td></tr>
<tr><td>broadcast.verbose</td><td>if present, give detailed output</td><td></td></tr>
<tr><td>broadcast.threadrate</td><td>thread rate in ms. for streaming encoder data</td><td>20</td></tr>
<tr><td>broadcast.stream_state</td><td>whether to stream state (1) or not (0)</td><td>1</td></tr>
<tr><td>broadcast.subdevice</td><td>name of specific control device to wrap</td><td></td></tr>
<tr><td>broadcast.name</td><td>prefix for port names</td><td>/controlboard</td></tr>
<tr><td>broadcast.allow-deprecated-devices</td><td></td><td></td></tr>
</table>

\sa yarp::dev::DeviceGroup

 */
