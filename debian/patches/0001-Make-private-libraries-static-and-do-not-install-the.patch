From: "Daniele E. Domenichelli" <ddomenichelli@drdanz.it>
Date: Thu, 18 Aug 2016 19:39:39 +0200
Subject: Make private libraries static and do not install the libraries and
 the headers

---
 src/carriers/CMakeLists.txt               | 20 ++++++++++----------
 src/devices/CMakeLists.txt                | 20 ++++++++++----------
 src/libYARP_logger/CMakeLists.txt         | 20 ++++++++++----------
 src/libYARP_manager/CMakeLists.txt        | 20 ++++++++++----------
 src/libYARP_name/CMakeLists.txt           | 26 +++++++++++++-------------
 src/libYARP_serversql/CMakeLists.txt      | 20 ++++++++++----------
 src/libYARP_wire_rep_utils/CMakeLists.txt | 14 +++++++-------
 7 files changed, 70 insertions(+), 70 deletions(-)

diff --git a/src/carriers/CMakeLists.txt b/src/carriers/CMakeLists.txt
index 7493718..8d67343 100644
--- a/src/carriers/CMakeLists.txt
+++ b/src/carriers/CMakeLists.txt
@@ -19,16 +19,16 @@ yarp_begin_plugin_library(yarpcar)
   add_subdirectory(portmonitor_carrier)
   add_subdirectory(depth_image_portmonitor)
   yarp_end_plugin_library(yarpcar)
-install(TARGETS yarpcar
-        EXPORT YARP
-        COMPONENT runtime
-        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
-
-if(YARP_LINK_PLUGINS)
-  set_property(GLOBAL APPEND PROPERTY YARP_LIBS yarpcar ${yarpcar_LIBRARIES})
-endif()
+# install(TARGETS yarpcar
+#         EXPORT YARP
+#         COMPONENT runtime
+#         RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#         LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
+#
+# if(YARP_LINK_PLUGINS)
+#   set_property(GLOBAL APPEND PROPERTY YARP_LIBS yarpcar ${yarpcar_LIBRARIES})
+# endif()
 
 include(YarpDeprecatedOption)
 yarp_renamed_option(ENABLE_yarpcar_bayer_carrier ENABLE_yarpcar_bayer) # since YARP 2.3.68
diff --git a/src/devices/CMakeLists.txt b/src/devices/CMakeLists.txt
index 5793618..68d6f78 100644
--- a/src/devices/CMakeLists.txt
+++ b/src/devices/CMakeLists.txt
@@ -86,13 +86,13 @@ endforeach(EXTFILE)
 
 yarp_end_plugin_library(yarpmod)
 
-install(TARGETS yarpmod
-        EXPORT YARP
-        COMPONENT runtime
-        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
-
-if (YARP_LINK_PLUGINS)
-  set_property(GLOBAL APPEND PROPERTY YARP_LIBS yarpmod ${yarpmod_LIBRARIES})
-endif()
+# install(TARGETS yarpmod
+#         EXPORT YARP
+#         COMPONENT runtime
+#         RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+#         LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+#         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+#
+# if (YARP_LINK_PLUGINS)
+#   set_property(GLOBAL APPEND PROPERTY YARP_LIBS yarpmod ${yarpmod_LIBRARIES})
+# endif()
diff --git a/src/libYARP_logger/CMakeLists.txt b/src/libYARP_logger/CMakeLists.txt
index 5dbd5d9..ffba094 100644
--- a/src/libYARP_logger/CMakeLists.txt
+++ b/src/libYARP_logger/CMakeLists.txt
@@ -45,14 +45,14 @@ endif()
 set_property(TARGET YARP_logger PROPERTY PUBLIC_HEADER ${YARP_logger_HDRS})
 set_property(TARGET YARP_logger PROPERTY PRIVATE_HEADER ${YARP_logger_IMPL_HDRS})
 
-install(TARGETS YARP_logger
-        EXPORT YARP
-        COMPONENT runtime
-        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/logger"
-        PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/logger/impl")
-
-set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_logger)
+# install(TARGETS YARP_logger
+#         EXPORT YARP
+#         COMPONENT runtime
+#         RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#         LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/logger"
+#         PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/logger/impl")
+#
+# set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_logger)
 set_property(TARGET YARP_logger PROPERTY INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/include)
diff --git a/src/libYARP_manager/CMakeLists.txt b/src/libYARP_manager/CMakeLists.txt
index 0547c4b..b0bec81 100644
--- a/src/libYARP_manager/CMakeLists.txt
+++ b/src/libYARP_manager/CMakeLists.txt
@@ -104,15 +104,15 @@ if(CREATE_LIB_MANAGER)
   set_property(TARGET YARP_manager PROPERTY PUBLIC_HEADER ${YARP_manager_HDRS})
   set_property(TARGET YARP_manager PROPERTY PRIVATE_HEADER ${YARP_manager_IMPL_HDRS})
 
-  install(TARGETS YARP_manager
-          EXPORT YARP
-          COMPONENT runtime
-          RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-          LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-          ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-          PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/manager"
-          PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/manager/impl")
-
-  set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_manager)
+#   install(TARGETS YARP_manager
+#           EXPORT YARP
+#           COMPONENT runtime
+#           RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#           LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#           ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#           PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/manager"
+#           PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/manager/impl")
+#
+#   set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_manager)
   set_property(TARGET YARP_manager PROPERTY INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/include)
 endif()
diff --git a/src/libYARP_name/CMakeLists.txt b/src/libYARP_name/CMakeLists.txt
index dd65a33..2e86041 100644
--- a/src/libYARP_name/CMakeLists.txt
+++ b/src/libYARP_name/CMakeLists.txt
@@ -26,23 +26,23 @@ get_property(YARP_TREE_INCLUDE_DIRS GLOBAL PROPERTY YARP_TREE_INCLUDE_DIRS)
 include_directories(${YARP_TREE_INCLUDE_DIRS})
 include_directories(SYSTEM ${ACE_INCLUDE_DIRS})
 
-add_library(YARP_name ${YARP_name_SRCS}
-                      ${YARP_name_HDRS}
-                      ${YARP_name_IMPL_HDRS})
+add_library(YARP_name STATIC ${YARP_name_SRCS}
+                             ${YARP_name_HDRS}
+                             ${YARP_name_IMPL_HDRS})
 target_link_libraries(YARP_name LINK_PRIVATE YARP_OS)
 target_link_libraries(YARP_name LINK_PRIVATE ${ACE_LIBRARIES})
 
 set_property(TARGET YARP_name PROPERTY PUBLIC_HEADER ${YARP_name_HDRS})
 set_property(TARGET YARP_name PROPERTY PRIVATE_HEADER ${YARP_name_IMPL_HDRS})
 
-install(TARGETS YARP_name
-        EXPORT YARP
-        COMPONENT runtime
-        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/name"
-        PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/name/impl")
-
-set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_name)
+# install(TARGETS YARP_name
+#         EXPORT YARP
+#         COMPONENT runtime
+#         RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#         LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/name"
+#         PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/name/impl")
+#
+# set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_name)
 set_property(TARGET YARP_name PROPERTY INCLUDE_DIRS ${YARP_TREE_INCLUDE_DIRS})
diff --git a/src/libYARP_serversql/CMakeLists.txt b/src/libYARP_serversql/CMakeLists.txt
index 09206b8..ee71290 100644
--- a/src/libYARP_serversql/CMakeLists.txt
+++ b/src/libYARP_serversql/CMakeLists.txt
@@ -54,15 +54,15 @@ endif()
 set_property(TARGET YARP_serversql PROPERTY PUBLIC_HEADER ${YARP_serversql_HDRS})
 set_property(TARGET YARP_serversql PROPERTY PRIVATE_HEADER ${YARP_serversql_IMPL_HDRS})
 
-install(TARGETS YARP_serversql
-        EXPORT YARP
-        COMPONENT runtime
-        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/serversql"
-        PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/serversql/impl")
-
-set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_serversql)
+# install(TARGETS YARP_serversql
+#         EXPORT YARP
+#         COMPONENT runtime
+#         RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#         LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#         PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/serversql"
+#         PRIVATE_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/yarp/serversql/impl")
+#
+# set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_serversql)
 set_property(TARGET YARP_serversql PROPERTY INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/include
                                                          ${YARP_OS_INCLUDE_DIRS})
diff --git a/src/libYARP_wire_rep_utils/CMakeLists.txt b/src/libYARP_wire_rep_utils/CMakeLists.txt
index 1d66e64..a86b054 100644
--- a/src/libYARP_wire_rep_utils/CMakeLists.txt
+++ b/src/libYARP_wire_rep_utils/CMakeLists.txt
@@ -20,11 +20,11 @@ if(CREATE_OPTIONAL_CARRIERS)
                                                          ${ACE_LIBRARIES})
 
   set_property(TARGET YARP_wire_rep_utils PROPERTY INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})
-  set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_wire_rep_utils)
-  install(TARGETS YARP_wire_rep_utils
-          EXPORT YARP
-          COMPONENT runtime
-          RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-          LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-          ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
+#   set_property(GLOBAL APPEND PROPERTY YARP_LIBS YARP_wire_rep_utils)
+#   install(TARGETS YARP_wire_rep_utils
+#           EXPORT YARP
+#           COMPONENT runtime
+#           RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+#           LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+#           ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}")
 endif()
